- name: Creating vault user group
  group: 
    name: "{{ vault_group }}"
    state: present

- name: Creating vault user
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "vault nologin User"
    createhome: "no"
    state: present

- name: Install prerequisites
  package:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ vault_install_prerequisites }}"

- name: Download binary
  get_url:
    url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
    dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
    checksum: "{{vault_checksum}}"
  register: vault_download

- name: "Unzip vault archive"
  unarchive:
    src: "{{ vault_download.dest }}"
    dest: /usr/local/bin
    copy: no
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755

- name: "Set vault binary capabilities"
  capabilities:
    path: /usr/local/bin/vault
    capability: cap_ipc_lock+ep
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy systemd vault.service file
  template:
    src: vault.service.j2
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
  notify: systemd_reload

- name: mkdir vault.d and Change ownership
  file:
    path: /etc/vault.d
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0777'

- name: mkdir vault_data for Storage backend and Change ownership 
  file:
    path: /opt/vault_data
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0777'

- name: Create vault_audit.log file if it does not exist.
  command: touch {{ vault_log_path }}
  args:
    creates: "{{ vault_log_path }}"

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: "{{ vault_log_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0777'

- name: config file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"

- name: vault service
  service:
    name: vault
    state: started
    enabled: yes
